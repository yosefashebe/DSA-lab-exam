public class question2 {

	public static void main(String[] args) {
		int [] numbers = {2,7,11,15};
		sumOfTwo(numbers,18);
		
		}
	static void sumOfTwo(int[] arr, int num) {
		for(int i = 0; i<arr.length;i++) {
			for(int j = 0;j<arr.length;j++) {
				if((arr[i] + arr[j]) == num) {
					System.out.printf("index %d and %d",i,j);
					System.out.println();
					break;
				}
			}
		}
	}

}
public class question4 {

	public static void main(String[] args) {
		int[] num = {1,2,3,43,5};
		System.out.println(maximum(num));
		
	}
	static int maximum(int[] nums) {
		int temp = nums[0];
		for(int i = 0; i<nums.length;i++) {
			if(nums[i]> temp) {
				temp = nums[i];
			}
		}
		return temp;
	}

}
public class question5 {
	public static void main(String[] args) {
        String input = "hello";
        String reversed = reverseString(input);
        System.out.println( reversed);
    }
    static class Stack {
        private int maxSize;
        private char[] stackArray;
        private int top;

        public Stack(int size) {
            maxSize = size;
            stackArray = new char[maxSize];
            top = -1;
        }

        public void push(char value) {
            if (top < maxSize - 1) {
                stackArray[++top] = value;
            }
        }

        public char pop() {
            if (top >= 0) {
                return stackArray[top--];
            } 
            return'0';
        }

        public boolean isEmpty() {
            return (top == -1);
        }
    }

      public static String reverseString(String input) {
        int length = input.length();
        Stack stack = new Stack(length);
        for (int i = 0; i < length; i++) {
            stack.push(input.charAt(i));
        }
        char[] reversedArray = new char[length];
        int index = 0;
        while (!stack.isEmpty()) {
            reversedArray[index++] = stack.pop();
        }

        return new String(reversedArray);
    }
    
}
